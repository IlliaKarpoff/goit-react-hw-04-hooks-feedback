{"version":3,"sources":["App.module.css","components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Section","title","children","Notification","message","Statistics","props","names","Object","keys","total","map","name","FeedbackOptions","options","onLeaveFeedback","key","type","onClick","uuidv4","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","positivePercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKACAA,EAAOC,QAAU,CAAC,UAAY,yB,6GCEf,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICCE,SAASC,EAAWC,GACjC,IAAMC,EAAQC,OAAOC,KAAKH,GAC1B,OACE,cAACN,EAAD,CAASC,MAAO,aAAhB,SACGK,EAAMI,MAAQ,EACb,6BACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,+BACGA,EADH,KACWN,EAAMM,KADRA,QAMb,cAACT,EAAD,CAAcC,QAAS,wB,YCdhB,SAASS,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACf,EAAD,CAASC,MAAO,wBAAhB,SACGO,OAAOC,KAAKK,GAASH,KAAI,SAAAK,GAAG,OAC3B,wBACEC,KAAK,SACLC,QAAS,kBAAMH,EAAgBC,IAFjC,SAKGA,GAFIG,oBCLA,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,OAEEF,mBAAS,GAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAGNJ,mBAAS,GAHH,mBAGrBK,EAHqB,KAGhBC,EAHgB,KAwBtBC,EAAqB,WACzB,OAAON,EAAOE,EAAUE,GASpBhB,EAAQkB,IAEd,OACE,qCACE,cAACf,EAAD,CACEC,QAAS,CAAEQ,OAAME,UAASE,OAC1BX,gBAnCgB,SAAAE,GACpB,OAAQA,GACN,IAAK,OACHM,GAAQ,SAAAD,GAAI,OAAIA,EAAO,KACvB,MAEF,IAAK,UACHG,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAChC,MAEF,IAAK,MACHG,GAAO,SAAAD,GAAG,OAAIA,EAAM,KACpB,MAEF,QACE,WAsBF,cAACrB,EAAD,CACEiB,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLhB,MAAOA,EACPmB,mBAnBkC,WACtC,IAAMnB,EAAQkB,IAEd,OAAOlB,EAAQ,EAAIoB,KAAKC,MAAOT,EAAOZ,EAAS,KAAO,EAgB9BsB,QC/C5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.5f96319d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3YPsG\"};","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: propTypes.string.isRequired,\n};","import React from 'react';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\nimport propTypes from 'prop-types';\n\nexport default function Statistics(props) {\n  const names = Object.keys(props);\n  return (\n    <Section title={'Statistics'}>\n      {props.total > 0 ? (\n        <ul>\n          {names.map(name => (\n            <li key={name}>\n              {name}: {props[name]}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </Section>\n  );\n}\n\nStatistics.propTypes = {\n  stats: propTypes.arrayOf(propTypes.array),\n  total: propTypes.number.isRequired,\n  positivePersentage: propTypes.number,\n};","import { v4 as uuidv4 } from 'uuid';\nimport Section from '../Section/Section';\nimport propTypes from 'prop-types';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <Section title={'Please leave feedback'}>\n      {Object.keys(options).map(key => (\n        <button\n          type=\"button\"\n          onClick={() => onLeaveFeedback(key)}\n          key={uuidv4()}\n        >\n          {key}\n        </button>\n      ))}\n    </Section>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: propTypes.object.isRequired,\n  onLeaveFeedback: propTypes.func.isRequired,\n};","import s from './App.module.css';\nimport { useState } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leaveFeedback = type => {\n    switch (type) {\n      case 'good':\n        setGood(good => good + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        break;\n\n      case 'bad':\n        setBad(bad => bad + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  const total = countTotalFeedback();\n\n  return (\n    <>\n      <FeedbackOptions\n        options={{ good, neutral, bad }}\n        onLeaveFeedback={leaveFeedback}\n      />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={total}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      />\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}